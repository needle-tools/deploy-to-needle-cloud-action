name: Publish

on:
  push:
    branches: [main]
    paths: ['package.json']

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      should-build: ${{ steps.check.outputs.should-build }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      
      - name: Get version
        id: version
        run: echo "version=v$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
      - name: Check if version changed and tag doesn't exist
        id: check
        run: |
          # Check if version changed
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          git checkout HEAD^
          PREVIOUS_VERSION=$(node -p "require('./package.json').version" 2>/dev/null || echo "0.0.0")
          git checkout -
          
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
            # Check if tag exists (both local and remote)
            if git tag -l "v$CURRENT_VERSION" | grep -q "^v$CURRENT_VERSION$" || git ls-remote --tags origin "refs/tags/v$CURRENT_VERSION" | grep -q "v$CURRENT_VERSION"; then
              echo "Tag v$CURRENT_VERSION already exists"
              echo "should-build=false" >> $GITHUB_OUTPUT
            else
              echo "should-build=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "Version not changed"
            echo "should-build=false" >> $GITHUB_OUTPUT
          fi

  build:
    if: needs.check-version.outputs.should-build == 'true'
    needs: check-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install deps and build
        run: npm ci && npm run build
      - name: Create and push tag
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "${{ needs.check-version.outputs.version }}" -m "Release ${{ needs.check-version.outputs.version }}"
          git push origin "${{ needs.check-version.outputs.version }}"
      - uses: JasonEtco/build-and-tag-action@v2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ needs.check-version.outputs.version }}